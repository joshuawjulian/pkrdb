import { ActionType, DealerActionType, PlayerActionType, PlayerIncreaseWagerType, PokerRoundType } from './action';
import { GameStateType, StackType } from './state';
export declare let playerActionsCurrentRound: (state: GameStateType) => PlayerActionType[];
export declare let getCurrentRound: (state: GameStateType) => PokerRoundType;
export declare let getAllDealerActions: (state: GameStateType) => DealerActionType[];
export declare let getIndexOfRoundStart: (state: GameStateType, round: PokerRoundType) => number;
export declare let getSeatsAtThisRoundStart: (state: GameStateType) => number[];
export declare let getSeatsAtRoundStart: (state: GameStateType, round: PokerRoundType) => number[];
export declare let cycleSeats: (seats: number[]) => number[];
export declare let findLargestBlind: (state: GameStateType) => number;
export type LargestWagersType = Record<PokerRoundType, number[]>;
export declare let largestWagersByRound: (state: GameStateType) => Record<PokerRoundType, number[]>;
export type StacksAtRoundType = Record<PokerRoundType, StackType[]>;
export declare let getStacksAtStartOfRound: (state: GameStateType) => StacksAtRoundType;
export declare let getStacksAtStartOfCurrentRound: (state: GameStateType) => StackType[];
export declare let getStacks: (state: GameStateType) => StackType[];
export declare let getSeatOrder: (state: GameStateType) => number[];
export declare let getWagers: (state: GameStateType) => PlayerIncreaseWagerType[];
export declare let getLargestWagers: (state: GameStateType) => number[];
export declare let getLargestWager: (state: GameStateType) => PlayerIncreaseWagerType | null;
export declare let getLargestWagerAmount: (state: GameStateType) => number;
export declare let getRemainingStacks: (state: GameStateType) => StackType[];
export declare let getMinBet: (state: GameStateType) => number;
export declare let getLargestStack: (state: GameStateType) => number;
export declare let getMaxBet: (state: GameStateType) => number;
export declare let getMinMaxBet: (state: GameStateType) => [number, number];
export declare let hasNonBlindAction: (state: GameStateType) => boolean;
export declare let hasNonBlindStraddleAction: (state: GameStateType) => boolean;
export declare let actionComplete: (state: GameStateType) => boolean;
export declare let numPlayersNotFolded: (state: GameStateType) => number;
export declare let getSeatActions: (state: GameStateType) => Record<number, PlayerActionType[]>;
export declare let validateAction: (state: GameStateType, nextAction: ActionType) => boolean | string;
export declare let validateState: (state: GameStateType) => boolean | string;
