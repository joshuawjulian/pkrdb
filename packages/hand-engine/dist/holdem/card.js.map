{"version":3,"sources":["../../src/holdem/card.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const CardRankSchema = z.union([\n\tz.literal('2'),\n\tz.literal('3'),\n\tz.literal('4'),\n\tz.literal('5'),\n\tz.literal('6'),\n\tz.literal('7'),\n\tz.literal('8'),\n\tz.literal('9'),\n\tz.literal('T'),\n\tz.literal('J'),\n\tz.literal('Q'),\n\tz.literal('K'),\n\tz.literal('A'),\n\tz.literal('X'),\n]);\n\nexport const CardSuitSchema = z.union([\n\tz.literal('s'),\n\tz.literal('h'),\n\tz.literal('d'),\n\tz.literal('c'),\n\tz.literal('x'),\n]);\n\nexport type CardSuitType = z.infer<typeof CardSuitSchema>;\n\nexport const CardSchema = z.object({\n\trank: CardRankSchema,\n\tsuit: CardSuitSchema,\n});\n\nexport type CardType = z.infer<typeof CardSchema>;\n\nexport let suitToCharacter = (suit: CardSuitType) => {\n\tswitch (suit) {\n\t\tcase 's':\n\t\t\treturn '♠';\n\t\tcase 'h':\n\t\t\treturn '♥';\n\t\tcase 'd':\n\t\t\treturn '♦';\n\t\tcase 'c':\n\t\t\treturn '♣';\n\t}\n\treturn 'x';\n};\n\nexport let cardToString = (card: CardType) => {\n\treturn card.rank + suitToCharacter(card.suit);\n};\n"],"mappings":";AAAA,SAAS,SAAS;AAEX,IAAM,iBAAiB,EAAE,MAAM;AAAA,EACrC,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AACd,CAAC;AAEM,IAAM,iBAAiB,EAAE,MAAM;AAAA,EACrC,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AAAA,EACb,EAAE,QAAQ,GAAG;AACd,CAAC;AAIM,IAAM,aAAa,EAAE,OAAO;AAAA,EAClC,MAAM;AAAA,EACN,MAAM;AACP,CAAC;AAIM,IAAI,kBAAkB,CAAC,SAAuB;AACpD,UAAQ,MAAM;AAAA,IACb,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AACJ,aAAO;AAAA,IACR,KAAK;AACJ,aAAO;AAAA,EACT;AACA,SAAO;AACR;AAEO,IAAI,eAAe,CAAC,SAAmB;AAC7C,SAAO,KAAK,OAAO,gBAAgB,KAAK,IAAI;AAC7C;","names":[]}