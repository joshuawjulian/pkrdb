{"version":3,"sources":["../../src/holdem/seat.ts"],"sourcesContent":["import { type GameStateType } from './state.js';\n\nexport let didSeatStraddle = (state: GameStateType, seatIndex: number) => {\n\treturn (\n\t\tstate.actionList.filter((action) => {\n\t\t\treturn action.action === 'straddle' && action.seat === seatIndex;\n\t\t}).length > 0\n\t);\n};\n\nexport let isSeatBlind = (state: GameStateType, seatIndex: number) => {\n\treturn (\n\t\tstate.actionList.filter((action) => {\n\t\t\treturn action.action === 'blind' && action.seat === seatIndex;\n\t\t}).length > 0\n\t);\n};\n\nexport let getNumberBlinds = (state: GameStateType) => {\n\treturn state.actionList.filter((action) => {\n\t\treturn action.action === 'blind';\n\t}).length;\n};\n\nexport type PositionNameType = {\n\tlongName: string;\n\tshortName: string;\n};\n\nexport let getPositionNames = (state: GameStateType): PositionNameType[] => {\n\tlet numSeats = state.players.length;\n\tlet posNames: PositionNameType[] = new Array(numSeats).fill({\n\t\tlongName: '',\n\t\tshortName: '',\n\t});\n\n\t// Button is always the last seat\n\tposNames[numSeats - 1] = { longName: 'Button', shortName: 'BTN' };\n\n\t// get blinds/Straddles in first\n\tlet numBlinds = 0;\n\tstate.actionList.forEach((action) => {\n\t\tif (action.action === 'blind') {\n\t\t\tposNames[action.seat] = { longName: 'Blind', shortName: 'BL' };\n\t\t\tnumBlinds++;\n\t\t}\n\t\tif (action.action === 'straddle') {\n\t\t\tposNames[action.seat] = { longName: 'Straddle', shortName: 'ST' };\n\t\t}\n\t});\n\n\t// rename blinds to corrospond to the number of blinds\n\tif (numBlinds > 1) {\n\t\tlet blindCounter = 1;\n\t\tfor (let i = 0; i < numSeats; i++) {\n\t\t\tif (posNames[i].longName === 'Blind') {\n\t\t\t\tif (blindCounter === 1) {\n\t\t\t\t\tposNames[i] = { longName: 'Small Blind', shortName: 'SB' };\n\t\t\t\t} else if (blindCounter === 2) {\n\t\t\t\t\tposNames[i] = { longName: 'Big Blind', shortName: 'BB' };\n\t\t\t\t} else {\n\t\t\t\t\tposNames[i] = {\n\t\t\t\t\t\tlongName: `${blindCounter} Blind`,\n\t\t\t\t\t\tshortName: `${blindCounter}B`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tblindCounter++;\n\t\t\t}\n\t\t}\n\t}\n\n\t//if there is any more seats than blinds and button\n\tlet middleSeatNums = numSeats - numBlinds - 1;\n\n\tif (middleSeatNums <= 0) {\n\t\treturn posNames;\n\t}\n\n\t// get the rest of the positions\n\n\t// UTG First\n\tif (posNames[numBlinds].longName === '') {\n\t\tposNames[numBlinds] = { longName: 'Under the Gun', shortName: 'UTG' };\n\t}\n\n\t// CO\n\tif (posNames[numSeats - 2].longName === '') {\n\t\tposNames[numSeats - 2] = { longName: 'Cutoff', shortName: 'CO' };\n\t}\n\n\t// HJ\n\tif (posNames[numSeats - 3].longName === '') {\n\t\tposNames[numSeats - 3] = { longName: 'High Jack', shortName: 'HJ' };\n\t}\n\n\t// LJ\n\tif (posNames[numSeats - 4].longName === '') {\n\t\tposNames[numSeats - 4] = { longName: 'Low Jack', shortName: 'LJ' };\n\t}\n\n\t// count remaining un-named seats\n\tlet remainingSeats = posNames.filter((pos) => pos.longName === '').length;\n\tif (remainingSeats === 1) {\n\t\tposNames[numBlinds + 1] = { longName: 'Middle Position', shortName: 'MP' };\n\t} else if (remainingSeats === 2) {\n\t\tposNames[numBlinds + 1] = { longName: 'Middle Position', shortName: 'MP' };\n\t\tposNames[numBlinds + 2] = {\n\t\t\tlongName: 'Middle Position + 1',\n\t\t\tshortName: 'MP1',\n\t\t};\n\t} else if (remainingSeats === 3) {\n\t\tposNames[numBlinds + 1] = {\n\t\t\tlongName: 'Under the Gun + 1',\n\t\t\tshortName: 'UTG1',\n\t\t};\n\t\tposNames[numBlinds + 2] = { longName: 'Middle Position', shortName: 'MP' };\n\t\tposNames[numBlinds + 3] = {\n\t\t\tlongName: 'Middle Position + 1',\n\t\t\tshortName: 'MP1',\n\t\t};\n\t}\n\n\treturn posNames;\n};\n\nexport let getPositionName = (state: GameStateType, seatIndex: number) => {\n\treturn getPositionNames(state)[seatIndex];\n};\n"],"mappings":"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","names":[]}